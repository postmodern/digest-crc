/*
 * bitwidth: <%= bitwidth %>
 * generator polynomial: <%= "0x%0*x" % [bitclass / 4, polynomial] %>
 * input bit direction: <%= reflect_input ? "REFLECT" : "NORMAL" %>
 * slice bytes per iteration: <%= slice_size %>
 * slide bits per table: 8
 *
 * Generated by: <%= generator %> of digest-crc
 */

#define SLICE_SIZE <%= slice_size %>

static const <%= crcint %> <%= table_name %>[SLICE_SIZE][256] = {
% slice_size.times.map do |s|
	{
%   (0...256).step(step) do |ibase|
		<%= step.times.map { |i| "0x%0*x" % [bitclass / 4, table[s][ibase + i]] }.join(", ") %>,
%   end
	},
% end
};
